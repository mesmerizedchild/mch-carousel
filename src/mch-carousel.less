/** 
  * mch-carousel.less
  *
  * Â© 2015 Roberto Giuntoli [rg@mesmerizedchild.eu] 
  * More information at https://github.com/mesmerizedchild/mch-carousel/blob/master/README.md
  *
  * Core styles [in some case: Required styles] for MCh Carousel.
  * This file should be included at the beginning of your LESS files,
  *   before any MCh Carousel themes.
  * 
  * Typical usage in a LESS file:
  *
  * @import 'mch-carousel.less';
  * @import 'mch-carousel-basic-theme.less'; // If you want to use a theme
  *
  * #some-carousel-id, .or-some-carousel-class {
  *     // See below for notes on setting the carousel's height
  *     .mch-viewport-height({ height: 560px });
  *     // Now, the customisations for the speficic theme/instance 
  *     #mch-buttons-pane {
  *         max-width: 800px;
  *     }
  * }
  * #some-other-carousel-id, .or-some-other-carousel-class {
  *     // See below for notes on setting the carousel's height
  *     .mch-viewport-height({ height: 483px });
  *     // Other customisations for the speficic theme/instance 
  *     .mch-button-background {
  *         background-color: black;
  *     }
  * }
  *
  * The following reduces pollution in the CSS namespace, although all selectors
  *   in this LESS file begin with 'mch' and, as such, name conflicts are
  *   unlikely:
  * 
  * #some-carousel-id, .or-some-carousel-class {
  *     @import 'mch-carousel.less'; // No possibility of selector name conflicts,
  *                                  //   as all element in this import will be
  *                                  //   qualified with the carousel ID or class. 
  *     // See below for notes on setting the carousel's height
  *     .mch-viewport-height({ height: 560px });
  *     #mch-buttons-pane {
  *         max-width: 800px;
  *     }
  * }
  *
  * Note that, due to how Firefox handles [resized] images and the <div> containing
  *   them, we are forced to use a mix-in in order to set the height of the viewport.
  *   The mix-in enforces the specified height on a handful of elements within the
  *   carousel, and this may affect how responsive the carousel may be [ideally, 
  *   we would be able to set the height only on one of the outer elements 
  *   of the carousel and then the inner elements would all go: 'height: 100%', 
  *   but that has proven to fail in Firefox when images need to be scaled down or
  *   up in order to match the specified height, and this mix-in is the solution
  *   I've come up with...]
  *
  * So... the mix-in is .mch-viewport-height(). How do we use it?
  *
  * @import 'mch-carousel.less';
  * #some-carousel-id, .or-some-carousel-class {
  *     // Specify a fixed height of 280px
  *     .mch-viewport-height({
  *         height: 280px;
  *     });
  * }
  *
  * Media queries do work with the mix-in:
  *
  * @import 'mch-carousel.less';
  * .mch-viewport-height({
  *     // Specify a responsive height
  *     height: 26em;
  *     @media screen and (min-width: 600px) {
  *         height: 36em;
  *     }
  * });
  *
  * The height may be specified using "absolute" units [px, pt, mm, etc...] without
  *   any problem whatsoever.
  * On the other hand, care should be taken when using "relative" units:
  *   em, ex, ch:    they are relative to the current font, and the "current font"
  *                    may be different across different DOM elements of the
  *                    carousel. Careful!!
  *   rem, vw, vh,   although "relative" units, they are relative to elements
  *   vmin, vmax:      outside of the carousel, so they may be used.
  *
  *   %              definitely a bad idea; '25%' means completely different things
  *                    when applied to different DOM elements of the carousel.
  *                    This cannot be used at all!
  */

#mch-visible-carousel {
    position: relative; /* Not indispensable, but it won't hurt... */
}

#mch-image-list {
  /* Must stay hidden, as this is *not* what the carousel will display */
  display: none !important;
}

#mch-viewport {
  /* Relative position for #mch-scrollable-viewport */
  position: relative;
  /* Display below the buttons [if they happen to overlay the viewport] */
  z-index: 0; 
  /* Hide the scrollbar in #mch-scrollable-viewport */
  overflow: hidden;
}

#mch-scrollable-viewport {
  /* Embedded spaces must take no room */
  font-size: 0px !important; 
  /* Ensure images don't wrap due to embedded whitespaces */
  white-space: nowrap !important;
  /* Make it scrollable, then #mch-viewport hides the scrollbar */
  overflow-x: scroll;
  /* overflow-y should not be necessary, but just in case... */
  overflow-y: hidden;
  /* Position so that #mch-scrollable-viewport extends over all of #mch-viewport... */
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: -50px; /* ... and a bit beyond */
}

.mch-padding {
  display: inline-block !important;
  height: 0;
}

.mch-image-container {
  /* For anchoring the caption within each image */
  position: relative; 
  /* Without this, the carousel would flow vertically... */
  display: inline-block !important;
  /* Ensure that .css('width') includes image padding, if any. */
  box-sizing: border-box !important;
  img {
    height: 100%;
    z-index: 0;
    max-width: none;
    margin: 0 !important; /* Use padding if you need spacing between images. */
  }
}

.mch-caption-cntnr {
  z-index: 1;
}

.mch-caption-background {
  z-index: 2;
}

.mch-caption-lines {
  /* position is needed in case of completely-opaque caption lines
        over partially-opaque or transparent caption background.
     It may be overridden by the theme */
  position: relative;
  z-index: 3;
}

.mch-button {
  /* Above the viewport [if they overlap it], by default */
  z-index: 1;
  .mch-button-background {
    z-index: 0;
  } 
  .mch-button-graphics {
    /* position is needed in case of completely-opaque button caption/graphics
         over partially-opaque or transparent button background, and for
         correct handling of mouse hovering.
       It may be overridden by the theme */
    position: relative;
    z-index: 1;
  }
}

/* Helper class for hiding elements when not hovering over an image */
.mch-no-hover {
  visibility: hidden;
}

/* Helper class for hiding elements that must not be displayed */
.mch-invisible {
  display: none;
}

/* Mix-in for setting the height of the carousel. */
.mch-viewport-height(@rules) {
  #mch-viewport, .mch-image-container {
    @rules();
  }
}
